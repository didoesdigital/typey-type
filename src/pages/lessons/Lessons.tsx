import React, { ComponentProps } from "react";
import { Route, RouteComponentProps, Switch } from "react-router-dom";
import DocumentTitle from "react-document-title";
import ErrorBoundary from "../../components/ErrorBoundary";
import Lesson from "./Lesson";
import LessonsIndex from "./LessonsIndex";
import CustomLessonSetup from "./custom/CustomLessonSetup";
import Loadable from "react-loadable";
import PageLoading from "../../components/PageLoading";

type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;
type LessonsRoutingProps = Optional<
  & RouteComponentProps
  & ComponentProps<typeof Lesson>
  & ComponentProps<typeof CustomLessonSetup>
  & ComponentProps<typeof AsyncCustomLessonGenerator>
  // TODO: check this. it's not passed from parent
  , "lessonLength">

const AsyncCustomLessonGenerator = Loadable({
  loader: () => import("./custom/CustomLessonGenerator"),
  loading: PageLoading,
  delay: 300,
});

const Lessons = ({
  createCustomLesson,
  customLesson,
  customLessonMaterial,
  customLessonMaterialValidationMessages,
  customLessonMaterialValidationState,
  generateCustomLesson,

  actualText,
  changeFullscreen,
  changeShowScoresWhileTyping,
  changeShowStrokesAs,
  changeShowStrokesAsList,
  changeShowStrokesInLesson,
  changeShowStrokesOnMisstroke,
  changeSortOrderUserSetting,
  changeSpacePlacementUserSetting,
  changeStenoLayout,
  changeUserSetting,
  changeVoiceUserSetting,
  chooseStudy,
  completedPhrases,
  currentLessonStrokes,
  currentPhrase,
  currentPhraseID,
  currentStroke,
  customiseLesson,
  disableUserSettings,
  fetchAndSetupGlobalDict,
  flashcardsMetWords,
  flashcardsProgress,
  fullscreen,
  globalLookupDictionary,
  globalLookupDictionaryLoaded,
  globalUserSettings,
  handleBeatsPerMinute,
  handleDiagramSize,
  handleLesson,
  handleLimitWordsChange,
  handleRepetitionsChange,
  handleStartFromWordChange,
  handleStopLesson,
  handleUpcomingWordsLayout,
  toggleHideOtherSettings,
  lesson,
  lessonIndex,
  lessonLength,
  lessonNotFound,
  lessonSubTitle,
  lessonTitle,
  match,
  metWords,
  personalDictionaries,
  previousCompletedPhraseAsTyped,
  recentLessonHistory,
  repetitionsRemaining,
  restartLesson,
  reviseLesson,
  revisionMode,
  sayCurrentPhraseAgain,
  setUpProgressRevisionLesson,
  settings,
  setupLesson,
  showStrokesInLesson,
  startCustomLesson,
  startFromWordOne,
  startTime,
  stopLesson,
  targetStrokeCount,
  timer,
  topSpeedPersonalBest,
  totalNumberOfHintedWords,
  totalNumberOfLowExposuresSeen,
  totalNumberOfMatchedWords,
  totalNumberOfMistypedWords,
  totalNumberOfNewWordsMet,
  totalNumberOfRetainedWords,
  totalWordCount,
  upcomingPhrases,
  updateFlashcardsMetWords,
  updateFlashcardsProgress,
  updateGlobalLookupDictionary,
  updateMarkup,
  updatePersonalDictionaries,
  updatePreset,
  updateRevisionMaterial,
  updateTopSpeedPersonalBest,
  userSettings,
}: LessonsRoutingProps) => {
  return (
    <Switch>
      <Route
        path={`${match.url}/:category/:subcategory/:lessonPath/flashcards`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        path={`${match.url}/fundamentals/:lessonPath/flashcards`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        path={`${match.url}/drills/:lessonPath/flashcards`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        path={`${match.url}/:category/:subcategory/:lessonPath`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        path={`${match.url}/fundamentals/:lessonPath`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        path={`${match.url}/drills/:lessonPath`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/progress/`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/progress/seen/`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/progress/memorised/`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/custom/setup`}
        render={(props) => (
          <DocumentTitle title="Typey Type | Create a custom lesson">
            <CustomLessonSetup
              createCustomLesson={createCustomLesson}
              customLessonMaterial={customLessonMaterial}
              customLessonMaterialValidationMessages={
                customLessonMaterialValidationMessages
              }
              customLessonMaterialValidationState={
                customLessonMaterialValidationState
              }
              fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
              globalLookupDictionary={globalLookupDictionary}
              globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
              {...props}
            />
          </DocumentTitle>
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/custom/generator`}
        render={() => (
          <DocumentTitle title="Typey Type | Lesson generator">
            <ErrorBoundary>
              <AsyncCustomLessonGenerator
                customLesson={customLesson}
                customLessonMaterialValidationState={
                  customLessonMaterialValidationState
                }
                fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
                generateCustomLesson={generateCustomLesson}
                globalLookupDictionary={globalLookupDictionary}
              />
            </ErrorBoundary>
          </DocumentTitle>
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/custom`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/flashcards`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={`${match.url}/:notFound`}
        render={(props) => (
          <Lesson
            actualText={actualText}
            changeFullscreen={changeFullscreen}
            changeShowScoresWhileTyping={changeShowScoresWhileTyping}
            changeShowStrokesAs={changeShowStrokesAs}
            changeShowStrokesAsList={changeShowStrokesAsList}
            changeShowStrokesInLesson={changeShowStrokesInLesson}
            changeShowStrokesOnMisstroke={changeShowStrokesOnMisstroke}
            changeSortOrderUserSetting={changeSortOrderUserSetting}
            changeSpacePlacementUserSetting={changeSpacePlacementUserSetting}
            changeStenoLayout={changeStenoLayout}
            changeUserSetting={changeUserSetting}
            changeVoiceUserSetting={changeVoiceUserSetting}
            chooseStudy={chooseStudy}
            completedPhrases={completedPhrases}
            currentLessonStrokes={currentLessonStrokes}
            currentPhrase={currentPhrase}
            currentPhraseID={currentPhraseID}
            currentStroke={currentStroke}
            customiseLesson={customiseLesson}
            disableUserSettings={disableUserSettings}
            fetchAndSetupGlobalDict={fetchAndSetupGlobalDict}
            flashcardsMetWords={flashcardsMetWords}
            flashcardsProgress={flashcardsProgress}
            fullscreen={fullscreen}
            globalLookupDictionary={globalLookupDictionary}
            globalLookupDictionaryLoaded={globalLookupDictionaryLoaded}
            globalUserSettings={globalUserSettings}
            handleBeatsPerMinute={handleBeatsPerMinute}
            handleDiagramSize={handleDiagramSize}
            handleLesson={handleLesson}
            handleLimitWordsChange={handleLimitWordsChange}
            handleRepetitionsChange={handleRepetitionsChange}
            handleStartFromWordChange={handleStartFromWordChange}
            handleStopLesson={handleStopLesson}
            handleUpcomingWordsLayout={handleUpcomingWordsLayout}
            toggleHideOtherSettings={toggleHideOtherSettings}
            lesson={lesson}
            lessonIndex={lessonIndex}
            // @ts-expect-error
            lessonLength={lessonLength}
            lessonNotFound={lessonNotFound}
            lessonSubTitle={lessonSubTitle}
            lessonTitle={lessonTitle}
            metWords={metWords}
            personalDictionaries={personalDictionaries}
            previousCompletedPhraseAsTyped={previousCompletedPhraseAsTyped}
            recentLessonHistory={recentLessonHistory}
            repetitionsRemaining={repetitionsRemaining}
            restartLesson={restartLesson}
            reviseLesson={reviseLesson}
            revisionMode={revisionMode}
            sayCurrentPhraseAgain={sayCurrentPhraseAgain}
            setUpProgressRevisionLesson={setUpProgressRevisionLesson}
            settings={settings}
            setupLesson={setupLesson}
            showStrokesInLesson={showStrokesInLesson}
            startCustomLesson={startCustomLesson}
            startFromWordOne={startFromWordOne}
            startTime={startTime}
            stopLesson={stopLesson}
            targetStrokeCount={targetStrokeCount}
            timer={timer}
            topSpeedPersonalBest={topSpeedPersonalBest}
            totalNumberOfHintedWords={totalNumberOfHintedWords}
            totalNumberOfLowExposuresSeen={totalNumberOfLowExposuresSeen}
            totalNumberOfMatchedWords={totalNumberOfMatchedWords}
            totalNumberOfMistypedWords={totalNumberOfMistypedWords}
            totalNumberOfNewWordsMet={totalNumberOfNewWordsMet}
            totalNumberOfRetainedWords={totalNumberOfRetainedWords}
            totalWordCount={totalWordCount}
            upcomingPhrases={upcomingPhrases}
            updateFlashcardsMetWords={updateFlashcardsMetWords}
            updateFlashcardsProgress={updateFlashcardsProgress}
            updateGlobalLookupDictionary={updateGlobalLookupDictionary}
            updateMarkup={updateMarkup}
            updatePersonalDictionaries={updatePersonalDictionaries}
            updatePreset={updatePreset}
            updateRevisionMaterial={updateRevisionMaterial}
            updateTopSpeedPersonalBest={updateTopSpeedPersonalBest}
            userSettings={userSettings}
            {...props}
          />
        )}
      />
      <Route
        exact={true}
        path={match.url}
        render={() => (
          <LessonsIndex
            lessonIndex={lessonIndex}
            customLesson={customLesson}
            stopLesson={stopLesson}
          />
        )}
      />
    </Switch>
  );
};

export default Lessons;
